@page "/MyTokenBox"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using DCMLocker.Shared
@using DCMLocker.Shared.Locker



@inject Authentication.MOFAuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject DCMLocker.Client.Cliente.TLockerCliente Cliente

<h3>Token de Acceso</h3>
<p>
    Usted dispone de los siguintes tokens de acceso a box, 
    los cuales fueron generados por usted para la apertura de determinados Box.
</p>

<form>
    <div class="form-group">
        <label><strong>Tokens de acceso a box</strong></label>
        <select @bind="token" class="form-control form-control-user">
            @if (tokens != null)
            {
                for (int x = 0; x < tokens.Length; x++)
                {
                    <option value="@tokens[x].Token">@(tokens[x].Token) - BOX:@(tokens[x].Box + 1)</option>
                }

            }
        </select>
        <br/>
        <br/>
        <button type="button" disabled="@IsBussy" class="btn btn-warning btn-user btn-block" @onclick="(() => Accion())">Eliminar</button>

    </div>
</form>
@if (!string.IsNullOrEmpty(ErrorMsn))
{
    <div class="alert alert-danger">
        <strong>@ErrorMsn</strong>
    </div>
}

@code
{
    private bool IsBussy { get; set; }
    private string token { get; set; }
    private string ErrorMsn { get; set; }
    TokenAccessBox[] tokens { get; set; }
    protected override async void OnInitialized()
    {
        tokens = await Cliente.GetMyTokenKey();

        StateHasChanged();
    }

    private void Accion()
    {

    }
}
